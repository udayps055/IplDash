{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","pages/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","isMatchWon","winner","otherTeamRoute","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchMatches","title","value","teamMataches","teamWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4afe6e66.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MatchDetailCard.scss';\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const isMatchWon = teamName === match.winner;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    return (\r\n        <div className= {isMatchWon ? \"MatchDetailCard won-card\" : \"MatchDetailCard lost-card\"}>\r\n            <div className=\"first-section\">\r\n                <span className=\"vs\">vs</span> \r\n                <h1><Link to = {otherTeamRoute}>{otherTeam}</Link></h1>\r\n                <h3 className = \"match-date\">{match.date}</h3>\r\n                <h3 className = \"match-venue\">{match.venue}</h3>\r\n                <h5 className = \"match-result\">{match.winner} won by {match.resultMargin} {match.result}</h5>\r\n            </div>\r\n            <div className=\"second-section\">\r\n                <h3>First Inning</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Inning</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the Match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1}, {match.umpire2}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MatchSmallCard.scss';\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n    if (!match) return null;\r\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeam}`;\r\n    const isMatchWon = teamName === match.winner;\r\n    return (\r\n      <div className={isMatchWon ? \"MatchSmallCard won-card\" : \"MatchSmallCard lost-card\"}>\r\n        <span className=\"vs\">vs</span> \r\n        <h1><Link to = {otherTeamRoute}>{otherTeam}</Link></h1>\r\n        <p className = \"match-result\">{match.winner} won by {match.resultMargin} {match.result}</p>\r\n      </div>\r\n    );\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport './TeamPage.scss';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n\r\nexport const TeamPage = () => {\r\n    \r\n    const [team, setTeam] = useState({matches: []});\r\n    const { teamName } = useParams();\r\n\r\n    useEffect (\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName]\r\n    );\r\n    \r\n    if (!team || !team.matches) {\r\n        return <h1>Team Not Found</h1>;\r\n    } \r\n    return (\r\n        <div className=\"TeamPage\">\r\n            <div className = 'team-name-section'>\r\n                <h1 className=\"team-name\">{team.teamName}</h1>\r\n            </div>\r\n            <div className=\"win-loss-section\">\r\n                Wins / Losses\r\n                <PieChart\r\n                    data={[\r\n                        { title: 'Losses', value: team.teamMataches - team.teamWins, color: '#a34d5d' },\r\n                        { title: 'Wins', value: team.teamWins, color: '#4da375' }\r\n                    ]}\r\n                />\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Matches</h3>\r\n                <MatchDetailCard teamName = {team.teamName} match = {team.matches[0]}/>\r\n            </div>\r\n            {team.matches.slice(1).map(match => <MatchSmallCard key = {match.id} teamName = {team.teamName} match = {match}/>)}\r\n            <div className=\"more-link\">\r\n                <Link to = {`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More {'>'}</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({ teamName }) => {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n    // console.log(years.length, startYear, endYear);\r\n    return (\r\n        <ol className = \"YearSelector\">\r\n            { years.map (year => \r\n                <li key = {year}>\r\n                    <Link to = {`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                </li>\r\n            )}\r\n        </ol>\r\n    )\r\n}","import { React, useEffect, useState } from 'react';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { useParams } from 'react-router-dom';\r\nimport \"./MatchPage.scss\";\r\nimport { YearSelector } from '../components/YearSelector';\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const { teamName, year } = useParams();\r\n\r\n    useEffect (\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n                setMatches(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName, year]\r\n    );\r\n    \r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className= \"year-selector\">\r\n                <h3> Select Year </h3>\r\n                <YearSelector teamName = {teamName}/>\r\n            </div>\r\n            <div>\r\n                <h1 className = \"title-match-page\">{teamName} matches in {year}</h1>\r\n                {\r\n                    matches.map(match => <MatchDetailCard key = {match.id} teamName = {teamName} match = {match}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};","import {React} from 'react';\r\nimport './TeamTile.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to = {`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n};","import { React, useEffect, useState } from 'react';\r\nimport './HomePage.scss';\r\nimport { TeamTile } from './TeamTile';\r\n\r\nexport const HomePage = () => {\r\n    \r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect (\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\r\n                const data = await response.json();\r\n                setTeams(data);\r\n            };\r\n            fetchAllTeams();\r\n        }, []\r\n    );\r\n    \r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className = 'header-section'>\r\n                <h1 className=\"app-name\">Uday Pratap Singh's IPL DashBoard</h1>\r\n            </div>\r\n            <div className = \"team-grid\">\r\n                { teams.map(team => <TeamTile key = {team.teamName} teamName = {team.teamName} />) }\r\n            </div>\r\n        </div>\r\n    );\r\n};","import './App.scss';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path = \"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path = \"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path = \"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}